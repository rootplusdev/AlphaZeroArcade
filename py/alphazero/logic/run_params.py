import games.index as game_index
from util.py_util import is_valid_path_component

import argparse
from dataclasses import dataclass
import os
import sys
from typing import List


@dataclass
class RunParams:
    """
    Parameters used to specify a particular AlphaZero run. All files generated by the run are
    written to:

        $A0A_OUTPUT_DIR/{game}/{tag}/

    according to the directory structure described in DirectoryOrganizer.
    """
    game: str
    tag: str

    @staticmethod
    def create(args, require_tag=True) -> 'RunParams':
        params = RunParams(
            game=args.game,
            tag=args.tag,
        )
        params.validate(require_tag)
        return params

    def validate(self, require_tag):
        assert self.game, 'Required option: --game/-g'
        if require_tag:
            assert self.tag, 'Required option: --tag/-t'

        assert game_index.is_valid_game_name(self.game), f'Invalid game name: {self.game}'
        if self.tag:
            assert self.tag.find('@') == -1, 'Tag cannot contain @'
            assert is_valid_path_component(self.tag), f'Illegal tag name: {self.tag}'

    @staticmethod
    def add_args(parser: argparse.ArgumentParser, multiple_tags=False):
        group = parser.add_argument_group('Common options')

        game_index.add_parser_argument(group, '-g', '--game')
        if multiple_tags:
            group.add_argument('-t', '--tag', default='', help='comma-separated tags for this run (e.g. "v1,v2")')
        else:
            group.add_argument('-t', '--tag', default='', help='tag for this run (e.g. "v1")')

    def add_to_cmd(self, cmd: List[str]):
        cmd.extend([
            '--game', self.game,
            '--tag', self.tag,
        ])
